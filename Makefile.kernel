include common.mk

ASFLAGS = $(COMMON_ASFLAGS) -I./src
CXXFLAGS = $(COMMON_CXXFLAGS) -I./src -I./ext/newlib-$(NEWLIB_VERSION)/newlib/libc/include
LDFLAGS = -ffreestanding -O2 -nostdlib -T src/linker-$(CONFIG).ld

CRTBEGIN_OBJ:=$(shell $(CC) $(COMMON_CFLAGS) -print-file-name=crtbegin.o)
CRTEND_OBJ:=$(shell $(CC) $(COMMON_CFLAGS) -print-file-name=crtend.o)
KERNEL_SOURCES:=$(shell $(FIND) src/kernel -name '*.cc')
KERNEL_OBJECTS:=$(patsubst %.cc,build/$(CONFIG)/%.o,$(subst /,_,$(patsubst src/%,%,$(KERNEL_SOURCES))))
SUPPORT_SOURCES:=$(shell $(FIND) src/support -name '*.cc')
SUPPORT_OBJECTS:=$(patsubst %.cc,build/$(CONFIG)/%.o,$(subst /,_,$(patsubst src/%,%,$(SUPPORT_SOURCES))))

print-%  : ; @echo $* = $($*)

all: build/$(CONFIG)/$(KERNEL_BIN)

build/$(CONFIG):
	$(MKDIR) -p build/$(CONFIG)

build/$(CONFIG)/$(KERNEL_BIN): build/$(CONFIG)/$(KERNEL_BIN).elf
	$(OBJCOPY) $< -O binary $@

build/$(CONFIG)/$(KERNEL_BIN).elf: build/$(CONFIG)/crti.o build/$(CONFIG)/boot.o $(KERNEL_OBJECTS) $(SUPPORT_OBJECTS) build/$(CONFIG)/crtn.o
	$(LINK) $(LDFLAGS) -o $@ \
		build/$(CONFIG)/crti.o \
		$(CRTBEGIN_OBJ) \
		build/$(CONFIG)/boot.o \
		$(KERNEL_OBJECTS) \
		build/libcxxrt/libcxxrt.a \
		build/newlib/arm-none-eabi/newlib/libc/libc.a \
		$(SUPPORT_OBJECTS) \
		$(CRTEND_OBJ) \
		build/$(CONFIG)/crtn.o \
		-lgcc

build/$(CONFIG)/crti.o: src/crti.c build/$(CONFIG)
	$(CC) $(COMMON_CFLAGS) -c $< -o $@

build/$(CONFIG)/crtn.o: src/crtn.c build/$(CONFIG)
	$(CC) $(COMMON_CFLAGS) -c $< -o $@

build/$(CONFIG)/boot.o: src/boot.S build/$(CONFIG)
	$(CC) $(ASFLAGS) -c $< -o $@

build/$(CONFIG)/%.o: build/$(CONFIG)
	$(CXX) $(CXXFLAGS) -c $(patsubst %.o,src/%.cc,$(subst _,/,$(patsubst build/$(CONFIG)/%,%,$@))) -o $@

.PHONY: all build/$(CONFIG)/%.o
